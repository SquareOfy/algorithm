package com.ssafy.ws.step4;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 맛집리스트를 배열을 리스트로 변경
 */
public class RestaurantManagerImpl implements IRestaurantManager {

	private List<Restaurant> restaurants = new ArrayList<>();
	
	private RestaurantManagerImpl() {}
	private static RestaurantManagerImpl instance = new RestaurantManagerImpl();
	public static RestaurantManagerImpl getInstance() {
		return instance;
	}

	
	
	
	@Override
	public void addRestaurant(Restaurant restaurant) {
		this.restaurants.add(restaurant);
		
		
	}

	@Override
	public void removeRestaurant(int resid) {
		if (this.restaurants.size()==0) {
			System.out.println("삭제할 식당이 없습니다.");
		}else {
		for(int i=0; i<this.restaurants.size(); i++) {
			if(this.restaurants.get(i).getResId() == resid) {
				this.restaurants.remove(i);
				}
			}
		}
		
	}

	@Override
	//한식과 한식이 아닌 모든 레스토랑 배열 출력하기
	public List<Restaurant> getRestaurantList() {
		return this.restaurants;
	}

	@Override
	public List<Restaurant> searchByresid(int resid) {
	
		List<Restaurant> results = new ArrayList<>();
		for(int i=0; i<this.restaurants.size(); i++) {
			if(this.restaurants.get(i).getResId() == resid) {
				 results.add(this.restaurants.get(i));
			}
		}
		return results;
	}
		

	@Override
	public List<KoreanRestaurant> getkoreanRestaurants() {
		
		List<KoreanRestaurant> results = new ArrayList<>();
		for(int i=0; i<this.restaurants.size(); i++) {
			if (this.restaurants.get(i).getClass() == KoreanRestaurant.class){
					results.add((KoreanRestaurant) this.restaurants.get(i));
			}	
		}
		return results;
		}



	@Override
	public List<Restaurant> getNonKoreanRestaurants() {
		
		List<Restaurant> results = new ArrayList<>();
	
		for(int i=0; i<this.restaurants.size(); i++) {
			if (this.restaurants.get(i).getClass() != KoreanRestaurant.class){
					results.add(this.restaurants.get(i));
			}	
		}
		return results;
		}
	
	
	public ReviewManagerImpl getReviewManager(int resid) {
		Map<Restaurant, ReviewManagerImpl> managerMap = new HashMap<>();
		ReviewManagerImpl manager = new ReviewManagerImpl();
		
		if(this.restaurants.size()==0) {
			System.out.println("등록된 식당이 없습니다.");
		}else {
			for(int i=0; i<this.restaurants.size();i++) {
				if(this.restaurants.get(i).getResId()==resid ) {
					managerMap.put(this.restaurants.get(i), manager);
				}
				
			}
		}
		
		return manager;
		
		
	}
}
