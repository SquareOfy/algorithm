package com.ssafy.ws.step4;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * 리뷰리스트를 배열을 리스트로 변경
 */
public class ReviewManagerImpl implements IReviewManager{

	List<Review> reviews = new ArrayList<>();
	
	//싱글톤 패턴 해제
//	private static ReviewManagerImpl instance;
//	
	//생성자
	public ReviewManagerImpl() { }
//	
//	public static ReviewManagerImpl getInstance() {
//		return instance;
//}
	
	

	@Override
	public void addReview(Review review) {
		reviews.add(review);
		
		
	}

	@Override
	public void removeReview(int reviewId) throws RestaurantNotFoundException{
		
		int cnt=0;
		if (this.reviews.size() == 0) {
			System.out.println("삭제할 리뷰가 없습니다.");
		}else {
			for(int i=0; i<this.reviews.size(); i++) {
				if(this.reviews.get(i).getResId() == reviewId) {
					reviews.remove(i);
					cnt++;
				}
			if(cnt==0) {
				throw new RestaurantNotFoundException();
			}
		
			}
		}
	}

	@Override
	public List<Review> getReviewList() {
		return reviews;
	}

	@Override
	public List<Review> searchByreviewId(int reviewid) throws ReviewNotFoundException {
		List<Review> results = new ArrayList<>();
		int cnt =0;
		for(int i=0; i<this.reviews.size(); i++) {
			if(this.reviews.get(i).getReviewId() == reviewid) {
				results.add(this.reviews.get(i));
				cnt++;
			}
			if(cnt==0) {
				throw new ReviewNotFoundException(reviewid);
			}
		}
		return results;
	}

	@Override
	public List<Review> getRestaurantReview(int resId) {
		List<Review> results = new ArrayList<>();
		for(int i=0; i<this.reviews.size(); i++) {
			if(this.reviews.get(i).getResId() == resId) {
				results.add(this.reviews.get(i));
			}
		}
		return results;
	}
}
